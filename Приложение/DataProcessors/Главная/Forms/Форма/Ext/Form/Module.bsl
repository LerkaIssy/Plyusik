

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
<<<<<<< HEAD
	Если ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.Студент) Тогда
=======
	Если ПользователиИнформационнойБазы.ТекущийПользователь().Роли = Метаданные.Роли.Студент Тогда
>>>>>>> 34642ff6e2a72d3d02f6c40c6ce76596a950f23e
		ДостиженияНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьОтчетыРейтинг(); 
	АктуальностьДанных = ТекущаяДата();  
	ПоказатьОповещениеПользователя("Список достижений обновлен!");
<<<<<<< HEAD
	
=======

>>>>>>> 34642ff6e2a72d3d02f6c40c6ce76596a950f23e
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	ЗаполнитьОтчетыРейтинг();
КонецПроцедуры

#Область Рейтинг

&НаКлиенте
Процедура Рейтинг(Команда)
	Элементы.СтраницыДашборда.ТекущаяСтраница = Элементы.ПерваяСтраница;  
	ЗаполнитьОтчетыРейтинг();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОтчетыРейтинг()
	ЗаполнитьТоп();	
	ЗаполнитьТопГрупп();
КонецПроцедуры

&Насервере
Процедура ЗаполнитьТопГрупп() 
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиРейтингаОстатки.Студент.Владелец КАК Группа,
	|	СУММА(ОстаткиРейтингаОстатки.РейтингОстаток) КАК Рейтинг
	|ИЗ
	|	РегистрНакопления.ОстаткиРейтинга.Остатки КАК ОстаткиРейтингаОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРейтингаОстатки.Студент.Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Рейтинг УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Таблица = РезультатЗапроса.Выгрузить();   
	Место = 1;    
	ТабЗнач = Новый ТаблицаЗначений; 
	ТабЗнач.Колонки.Добавить("Место");
	ТабЗнач.Колонки.Добавить("Группа");
	ТабЗнач.Колонки.Добавить("ОбщийРейтингГруппы");
	
	Для каждого Строка Из Таблица Цикл  
		Если Место<11 Тогда
			
			СтрокаТЗ = ТабЗнач.Добавить();
			СтрокаТЗ.Место = Строка(Место);
			СтрокаТЗ.Группа =   Строка.Группа;
			СтрокаТЗ.ОбщийРейтингГруппы = Строка.Рейтинг;
			Место = Место+1;
			
		КонецЕсли;
		
	КонецЦикла;  
	ТопГрупп.Загрузить(ТабЗнач);
КонецПроцедуры

&Насервере
Процедура ЗаполнитьТоп()
	Перем Место;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиРейтингаОстатки.Студент КАК Студент,
	|	ОстаткиРейтингаОстатки.РейтингОстаток КАК РейтингОстаток
	|ИЗ
	|	РегистрНакопления.ОстаткиРейтинга.Остатки КАК ОстаткиРейтингаОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	РейтингОстаток УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Таблица = РезультатЗапроса.Выгрузить();   
	Место = 1;    
	ТабЗнач = Новый ТаблицаЗначений; 
	ТабЗнач.Колонки.Добавить("МестоВТопе");
	ТабЗнач.Колонки.Добавить("Студент");
	ТабЗнач.Колонки.Добавить("Рейтинг");
	
	Для каждого Строка Из Таблица Цикл  
		Если Место<11 Тогда
			
			СтрокаТЗ = ТабЗнач.Добавить();
			СтрокаТЗ.МестоВТопе = Строка(Место);
			СтрокаТЗ.Студент =   Строка.Студент;
			СтрокаТЗ.Рейтинг = Строка.РейтингОстаток;
			Место = Место+1;
			
		КонецЕсли;
		
	КонецЦикла;  
	Топ10.Загрузить(ТабЗнач);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	ЗаполнитьОтчетыРейтинг();
	АктуальностьДанных = ТекущаяДата();
КонецПроцедуры    


#КонецОбласти


#Область Достижения  

&НаКлиенте
Процедура Достижения(Команда)
	Элементы.СтраницыДашборда.ТекущаяСтраница = Элементы.ВтораяСтраница;   
	АктуальностьДанных = ТекущаяДата(); 
	ЗаполнитьОтчетыДостижения();
КонецПроцедуры  

&НаКлиенте
Процедура ОбновитьДанныеДостижения(Команда)
	ЗаполнитьОтчетыДостижения();
	АктуальностьДанных = ТекущаяДата();
КонецПроцедуры    

&НаКлиенте
Процедура ЗаполнитьОтчетыДостижения()       
	ДиаграммаРедкостиДостижений();
	ДиаграммаПокупок();
КонецПроцедуры

&НаСервере
Процедура ДиаграммаПокупок()
	
	ПокупкиЗаБонусы.Очистить();
	ПокупкиЗаБонусы.АвтоТранспонирование = Ложь;
	ПокупкиЗаБонусы.Обновление = Ложь;
	ПокупкиЗаБонусы.ТипДиаграммы = ТипДиаграммы.ГистограммаОбъемная;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПокупкаЗаБонусы.Покупка.Наименование КАК ПокупкаНаименование,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПокупкаЗаБонусы.Студент) КАК Студент
	|ИЗ
	|	Документ.ПокупкаЗаБонусы КАК ПокупкаЗаБонусы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПокупкаЗаБонусы.Покупка.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	Диаграмма = ЭтаФорма.ПокупкиЗаБонусы;
	Диаграмма.ИсточникДанных = РезультатЗапроса; 
	ПокупкиЗаБонусы.АвтоТранспонирование = Истина;
	ПокупкиЗаБонусы.Обновление = Истина;
КонецПроцедуры


&НаСервере
Процедура ДиаграммаРедкостиДостижений()
	
	РедкостьДостижений.Очистить();
	РедкостьДостижений.АвтоТранспонирование = ЛОЖЬ;
	РедкостьДостижений.Обновление = ЛОЖЬ;
	РедкостьДостижений.ТипДиаграммы = ТипДиаграммы.ГистограммаОбъемная;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПолученныеДостижения.Достижение.Код КАК Достижение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПолученныеДостижения.Студент) КАК Студенты
	|ИЗ
	|	РегистрСведений.ПолученныеДостижения КАК ПолученныеДостижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолученныеДостижения.Достижение.Код
	|ИТОГИ
	|	СУММА(Студенты)
	|ПО
	|	Достижение";
	
	РезультатЗапроса = Запрос.Выполнить();   	
	Диаграмма = ЭтаФорма.РедкостьДостижений;  
	Диаграмма.ИсточникДанных = РезультатЗапроса; 
	РедкостьДостижений.АвтоТранспонирование = Истина;
	РедкостьДостижений.Обновление = Истина;
	
КонецПроцедуры




#КонецОбласти


#Область Телеграм

&НаКлиенте
Процедура Telegram(Команда)
	Элементы.СтраницыДашборда.ТекущаяСтраница = Элементы.ТретьяСтраница;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьБота(Команда)
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияПроцедура",5);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияПроцедура() 
	
	Telegram_Сервер.ПрочитатьСообщенияПользователя();
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьРассылку(Команда)
	ОтправитьРассылкуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьРассылкуНаСервере()
	ТекстСообщения = ЭтотОбъект.ГрупповаяРассылка;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Telegram_Пользователи.IDПользователя КАК IDПользователя
	|ИЗ
	|	РегистрСведений.Telegram_Пользователи КАК Telegram_Пользователи";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Telegram_Сервер.ОтправитьСообщение(ВыборкаДетальныеЗаписи.IDПользователя,ТекстСообщения)
	КонецЦикла;	
	ЭтотОбъект.ГрупповаяРассылка = "";
	Объект.Студент="";
	Объект.Группа = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеПользователю(Команда)
	ОтправитьСообщениеПользователюНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьСообщениеПользователюНаСервере() 
	ТекстСообщения = ЭтотОбъект.СообщениеДляПользователя;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Telegram_Пользователи.IDПользователя КАК IDПользователя
	|ИЗ
	|	РегистрСведений.Telegram_Пользователи КАК Telegram_Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Студенты КАК Студенты
	|		ПО Telegram_Пользователи.Телефон = Студенты.Телефон
	|ГДЕ
	|	Студенты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Студент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Telegram_Сервер.ОтправитьСообщение(ВыборкаДетальныеЗаписи.IDПользователя,ТекстСообщения)
	КонецЦикла;
	
	ЭтотОбъект.СообщениеДляПользователя = "";
	Объект.Студент="";
	Объект.Группа = "";
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеГруппе(Команда)
	ОтправитьСообщениеГруппеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьСообщениеГруппеНаСервере()
	ТекстСообщения = ЭтотОбъект.СообщениеДляГруппы; 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Студенты.Владелец КАК Владелец,
	|	Telegram_Пользователи.IDПользователя КАК IDПользователя
	|ИЗ
	|	РегистрСведений.Telegram_Пользователи КАК Telegram_Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Студенты КАК Студенты
	|		ПО Telegram_Пользователи.Телефон = Студенты.Телефон
	|ГДЕ
	|	Студенты.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Объект.Группа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Telegram_Сервер.ОтправитьСообщение(ВыборкаДетальныеЗаписи.IDПользователя,ТекстСообщения)
	КонецЦикла;
	
	ЭтотОбъект.СообщениеДляГруппы = "";
	Объект.Студент="";
	Объект.Группа = "";
	
КонецПроцедуры



#КонецОбласти


#Область ПрофильПользователя   

&НаКлиенте
Процедура Профиль(Команда)
	Элементы.СтраницыДашборда.ТекущаяСтраница = Элементы.ПрофильСтудента; 
	ЗаполнитьПриветствие();    
	ДостиженияНаСервере(); 
	КурсыНаСервере();  
	РейтингПрофильНаСервере();
	ИсторияПокупокНаСервере();
КонецПроцедуры  

&НаСервере
Процедура РейтингПрофильНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиРейтингаОстатки.Студент КАК Студент,
	|	ОстаткиРейтингаОстатки.РейтингОстаток КАК РейтингОстаток
	|ИЗ
	|	РегистрНакопления.ОстаткиРейтинга.Остатки КАК ОстаткиРейтингаОстатки
	|ГДЕ
	|	ОстаткиРейтингаОстатки.Студент.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ПараметрыСеанса.ТекущийСтудент.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСтудент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСтудент.Следующий() Цикл
		ЭтотОбъект.РейтингПользователя = ВыборкаСтудент.РейтингОстаток;	
	КонецЦикла;  
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиБонусовОстатки.Студент КАК Студент,
	|	ОстаткиБонусовОстатки.БонусыОстаток КАК БонусыОстаток
	|ИЗ
	|	РегистрНакопления.ОстаткиБонусов.Остатки КАК ОстаткиБонусовОстатки
	|ГДЕ
	|	ОстаткиБонусовОстатки.Студент = &Студент";
	
	Запрос.УстановитьПараметр("Студент", ПараметрыСеанса.ТекущийСтудент.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЭтотОбъект .БалансПользователя = ВыборкаДетальныеЗаписи.БонусыОстаток;
	КонецЦикла;
	
КонецПроцедуры  

&НаСервере
Процедура ИсторияПокупокНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиБонусов.Регистратор.Покупка КАК Покупка,
	|	ОстаткиБонусов.Регистратор.Сумма КАК Сумма,
	|	ОстаткиБонусов.Регистратор.Дата КАК Дата
	|ИЗ
	|	РегистрНакопления.ОстаткиБонусов КАК ОстаткиБонусов
	|ГДЕ
	|	ОстаткиБонусов.Студент = &Студент
	|	И ОстаткиБонусов.ВидДвижения = &Расход";
	
	Запрос.УстановитьПараметр("Студент", ПараметрыСеанса.ТекущийСтудент.Ссылка);
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход) ;
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ЭтотОбъект.ИсторияПокупок.Загрузить(РезультатЗапроса);
КонецПроцедуры  

&НаСервере
Процедура КурсыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Курсы.Наименование КАК НазваниеКурса
	|ИЗ
	|	Справочник.Курсы КАК Курсы
	|ГДЕ
	|	Курсы.Группы.Группа.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ПараметрыСеанса.ТекущийСтудент.Владелец.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ЭтотОбъект.Курсы.Загрузить(РезультатЗапроса);	 
	
КонецПроцедуры  

&НаСервере
Процедура ДостиженияНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Достижения.Ссылка КАК Достижение,
	|	Достижения.ПрограммнаяЛогика КАК ПрограммнаяЛогика,
	|	ЛОЖЬ КАК УсловиеВыполнено
	|ИЗ
	|	Справочник.Достижения КАК Достижения";
	
	РезультатЗапроса = Запрос.Выполнить();
	//проверяем запрос на наличие записей
	Если РезультатЗапроса.Пустой() Тогда
		//если запрос оказался пустым - прерываем выполнение процедуры
		//и выводим текст ошибки
		ВызватьИсключение "Нет доступных достижений";
	КонецЕсли; 
	//выгружаем результат выполнения запроса в таблицу
	ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	//создаем структуру для отбора строк из ТаблицаРезультата
	СтруктураОтбора = Новый Структура("УсловиеВыполнено", Истина);
	//выбираем только те строки, которые удовлетворяют условию отбора
	ТаблицаДостижений = ТаблицаРезультата.НайтиСтроки(СтруктураОтбора);
	//записываем данные в регистр сведений ПолученныеДостижения
	ЗафиксироватьДостиженияВРегистре(ТаблицаДостижений);
	//устанавливаем значения для параметра запроса из СписокДостижений
	СписокДостижений.Параметры.УстановитьЗначениеПараметра("Студент",ПараметрыСеанса.ТекущийСтудент.Ссылка);
КонецПроцедуры  

&НаСервере
Процедура ЗафиксироватьДостиженияВРегистре(ТаблицаДостижений)
	
	Для каждого Строка Из ТаблицаДостижений Цикл
		//создаем новую запись в регистре сведений
		НоваяЗапись = РегистрыСведений.ПолученныеДостижения.СоздатьМенеджерЗаписи();
		//заполняем измерение студент ссылкой на студента чей профиль просматривается
		НоваяЗапись.Студент = Объект.Ссылка;  
		//заполняем измерение достижение данными из таблицы
		НоваяЗапись.Достижение = Строка.ДостижениеСсылка; 
		//получаем адрес картинки во вх по сслыке на достижение
		НоваяЗапись.АдресВХ = ОбщийСерверныйМодуль.ПолучитьАдресКартинкиИзВХ(Строка.ДостижениеСсылка, Неопределено);
		//записываем данные в базу, если подобная запись уже есть - замещаем ее
		НоваяЗапись.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

&Насервере
Процедура ЗаполнитьПриветствие()
	
	Элементы.Приветствие.Заголовок = "Добро пожаловать, "+ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя;
	
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Профиль(Команда)
	Элементы.СтраницыДашборда.ТекущаяСтраница = Элементы.ПрофильСтудента; 
	ЗаполнитьПриветствие();    
	ДостиженияНаСервере(); 
    
КонецПроцедуры  

&НаСервере
Процедура ДостиженияНаСервере()
	
КонецПроцедуры 


&Насервере
Процедура ЗаполнитьПриветствие()
	
	Элементы.Приветствие.Заголовок = "Добро пожаловать, "+ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя;
	
	
КонецПроцедуры

























Функция ПолучитьДанныеДляДиаграммыДостижений()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПолученныеДостижения.Достижение КАК Достижение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПолученныеДостижения.Студент) КАК Студент
	|ИЗ
	|	РегистрСведений.ПолученныеДостижения КАК ПолученныеДостижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолученныеДостижения.Достижение";
	
	ТаблицаЗначений = Запрос.Выполнить().Выгрузить();
	
	ПрНомерЗаписи = 0;
	СтрутураДанных = Новый Структура;
	
	Для каждого ТекСтрока Из ТаблицаЗначений Цикл
		
		СтруктураСтроки = Новый Структура;
		СтруктураСтроки.Вставить("Достижение",ТекСтрока.Достижение);
		СтруктураСтроки.Вставить("Студент",ТекСтрока.Студент);
		СтруктураСтроки.Вставить("Запись" + Строка(ПрНомерЗаписи),СтруктураСтроки);
		ПрНомерЗаписи = ПрНомерЗаписи +1;
	КонецЦикла;
	Возврат СтрутураДанных;
КонецФункции // ()
